libvirt releases
================

# v3.0.0 (2017-01-17)

  * New features

    - Domain events for metadata content changes
        The domain events framework has a new event ID that can be used to get
        notifications when domain metadata content changes.

    - Event notifications for the secret object
        The secret object now supports event notifications, covering lifcycle
        changes and secret value changes.

    - New localPtr attribute for "ip" element in network XML

    - qemu: Support QEMU group I/O throttling
        Add the capability to allow group I/O throttling via a new domain
        <disk> <iotune> subelement "group_name" to allow sharing I/O throttling
        quota between multiple drives.

    - nss: Introduce libvirt_guest
        New libvirt_guest nss module that translates libvirt guest names into
        IP addresses.

    - daemon: Add support for runtime logging settings adjustment
        Logging-related settings like log outputs and filters can now be
        adjusted during runtime using the admin interface without the necessity
        of the daemon's restart.

    - storage: Add virStorageVolInfoFlags API
        Add the API to support using the VIR_STORAGE_VOL_GET_PHYSICAL flag in
        order to return the host physical size in bytes of the image container
        in the allocation field of the _virStorageVolInfo structure. The
        --physical flag has been added to the virsh vol-info command to access
        the data.

    - libxl: Implement virDomainGetMaxVcpus API

    - storage: Add overwrite flag checking for logical pool
        Add support for the OVERWRITE flags for the logical storage backend
        including checking for existing data on the target volumes when
        building a new logical pool on target volume(s).

    - qemu: Add support for guest CPU configuration on s390(x)

  * Improvements

    - perf: Add more perf statistics
        Add support to get the count of branch instructions executed, branch
        misses, bus cycles, stalled frontend cpu cycles, stalled backend cpu
        cycles, and ref cpu cycles by applications running on the platform.

    - conf: Display <physical> for volume xml
        Add a display of the <physical> size of a disk volume in the output of
        the volume XML.

    - qemu: Use virtio-pci by default for aarch64 mach-virt guests
        virtio-pci provides several advantages over virtio-mmio, such as the
        ability to hotplug devices and improved performance. While opting in to
        virtio-pci has been possible for a while, newly-defined guests will now
        use it automatically.

    - vbox: remove support for VirtualBox 3.x and older
        Those old VirtualBox versions have been unsupported by upstream for a
        long time and the API of 4.0 and newer has diverged enough to require
        code abstractions to handle differences. Removing support for those old
        versions drops lots of code from the driver and simplifies the logic to
        ease implementation of new features going forward.

    - virsh: pool-info: introduce option --bytes
        Add option --bytes to virsh pool-info in order ti allow display of
        units in bytes rather than default of human readable output.

    - scsi: Add parent wwnn/wwpn or fabric capability for createVport
        Improve the algorithm searching for the parent scsi_host device for
        vHBA/NPIV scsi_host creation. Rather than supplying the "parent" by
        name, it's now possible to define the parent by it's wwnn/wwpn or
        fabric_wwn in the node device create XML or the storage pool XML.

    - qemu: aggregate pcie-root-ports onto multiple functions of a slot
        When pcie-root-ports are added to pcie-root in order to provide a place
        to connect PCI Express endpoint devices, libvirt now aggregates
        multiple root ports together onto the same slot (up to 8 per slot) in
        order to conserve slots. Using this method, it's possible to connect
        more than 200 endpoint devices to a guest that uses PCIe without
        requiring setup of any PCIe switches.

  * Bug fixes

    - lxc: fix accidental killing of containers during libvirtd restart
        The libvirt_lxc process was previously not moved into the container
        scope. As a result, if systemd reloads its config after a container is
        started, when libvirtd is later restarted it will accidentally kill the
        containers.

    - qemu: Correct GetBlockInfo values
        For an active domain, correct the physical value provided for a raw
        sparse file backed storage and the allocation value provided for a
        qcow2 file backed storage that hasn't yet been opened on the domain.

    - qemu: Make virtio console usable on ppc64 guests
        The chardev detection code has been improved and can now handle this
        configuration properly.

    - qemu: Enable mount namespace
        To avoid funny races with udev relabelling devices under our hands and
        to enhance security, libvirt now spawns each qemu process with its own
        /dev.

    - storage: Fix implementation of no-overwrite for file system backend
        Fix file system storage backend implementation of the OVERWRITE flags
        to be consistent between code and documentation. Add checks to ensure
        that when building a new file system on a target volume that there is
        not something already on the disk in a format that libvirt can
        recognize.

    - qemu: Create hugepage path on per domain basis
        Historically, all hugepage enabled domains shared the same path under
        hugetlbfs. This left libvirt unable to correctly set security labels on
        it. With this release, however, each domain is put into a separate path
        which is also correctly labeled.

    - conf: Reject domains with duplicate drive addresses
        Reject duplicate drive addresses for disks and hostdevs at domain
        definition.

    - libxl: reverse defaults on HVM net device attach
        Fixes network interface attach for HVM domains when no model is
        specified. Emulated hotplug isn't yet supported and hence we should
        default to the general working scenario.

    - libxl: always enable pae for x86_64 HVM
        By default pae is disabled in libxl. Without an explicit <pae/> setting
        in the domain <features> configuration, an x86_64 HVM domain would be
        get an i686 environment. pae should always be enabled for x86_64 HVM
        domains.

# v2.5.0 (2016-12-04)

  * New features

    - shmem: Add support for additional models
        The shmem device can now utilize QEMU's ivshmem-plain and
        ivshmem-doorbell, more modern versions of ivshmem.

    - vbox: Add VirtualBox 5.1 support

    - libssh: New transport
        The new libssh transport allows one to connect to a running libvirtd
        via SSH, using the libssh library; for example:
        qemu+libssh://server/system.

    - vhost-scsi: Add support scsi_host hostdev passthrough
        Add the capability to pass through a scsi_host HBA and the associated
        LUNs to the guest.

    - qemu: Users can now enable debug logging for native gluster volumes in
      qemu using the "gluster_debug_level" option in qemu.conf

    - memory hotplug: Slot numbers for memory devices are now automatically
      allocated and thus persistent. In addition slot numbers can be specified
      without providing a base address, which simplifies user configuration

    - qemu: Express devices will be placed on PCIe bus by default
        For machine types that use a PCI Express root bus (e.g. x86_64/Q35 and
        aarch64/virt), any unaddressed PCI device that is an Express device
        (all virtio-1.0 devices, e1000e, nec-xhci, vfio assigned devices) will
        be placed on an Express controller (i.e. a pcie-root-port) instead of a
        legacy PCI controller (i.e. pci-bridge) with the root ports added as
        needed.

  * Improvements

    - docs: Better documentation for migration APIs and flags

    - vbox: Address thread safety issues

    - virsh: Add support for passing an alternative persistent XML to migrate
      command

    - vhostuser: Allow hotplug of multiqueue devices

    - NEWS: Switch to an improved format
        List user-visible changes instead of single commits for a better
        high-level overview of differences between libvirt releases.

    - website: Modernize layout and branding
        The libvirt website looked very cluttered and outdated; it has now been
        completely overhauled, resulting in a design that's better organized
        and more pleasant to look at.

  * Bug fixes

    - vz: Fix migration in P2P mode

    - Forbid newline character in names of some libvirt objects

    - Fix compilation on macOS

==============================================================================
Older libvirt releases didn't have proper release notes: if you are interested
in changes between them, you should check out ChangeLog* and docs/news-*.html.
