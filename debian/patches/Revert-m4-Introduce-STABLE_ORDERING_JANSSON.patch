From: =?utf-8?q?J=C3=A1n_Tomko?= <jtomko@redhat.com>
Date: Mon, 13 Aug 2018 13:39:33 +0200
Subject: Revert "m4: Introduce STABLE_ORDERING_JANSSON"
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 8bit

This reverts commit 4dd60540007042bfc0087a67f57f3e9f3311a84a.

Jansson cannot parse QEMU's quirky JSON.
Revert back to yajl.

https://bugzilla.redhat.com/show_bug.cgi?id=1614569

Signed-off-by: Ján Tomko <jtomko@redhat.com>
Reviewed-by: Daniel P. Berrangé <berrange@redhat.com>
---
 m4/virt-jansson.m4           | 3 ---
 tests/qemublocktest.c        | 5 -----
 tests/qemucapabilitiestest.c | 5 -----
 tests/qemucommandutiltest.c  | 5 -----
 tests/qemuhotplugtest.c      | 5 -----
 tests/qemumigparamstest.c    | 5 -----
 tests/qemumonitorjsontest.c  | 5 -----
 tests/virjsontest.c          | 5 -----
 tests/virmacmaptest.c        | 5 -----
 tests/virnetdaemontest.c     | 5 -----
 10 files changed, 48 deletions(-)

diff --git a/m4/virt-jansson.m4 b/m4/virt-jansson.m4
index ab4c020..206d6a5 100644
--- a/m4/virt-jansson.m4
+++ b/m4/virt-jansson.m4
@@ -22,9 +22,6 @@ AC_DEFUN([LIBVIRT_ARG_JANSSON],[
 AC_DEFUN([LIBVIRT_CHECK_JANSSON],[
   dnl Jansson http://www.digip.org/jansson/
   LIBVIRT_CHECK_PKG([JANSSON], [jansson], [2.5])
-  dnl Older versions of Jansson did not preserve the order of object keys
-  dnl use this check to guard the tests that are sensitive to this
-  LIBVIRT_CHECK_PKG([STABLE_ORDERING_JANSSON], [jansson], [2.8], [true])
 ])
 
 AC_DEFUN([LIBVIRT_RESULT_JANSSON],[
diff --git a/tests/qemublocktest.c b/tests/qemublocktest.c
index d22b4b7..9a387cf 100644
--- a/tests/qemublocktest.c
+++ b/tests/qemublocktest.c
@@ -337,11 +337,6 @@ mymain(void)
     char *capslatest_x86_64 = NULL;
     virQEMUCapsPtr caps_x86_64 = NULL;
 
-#if !WITH_STABLE_ORDERING_JANSSON
-    fputs("libvirt not compiled with recent enough Jansson, skipping this test\n", stderr);
-    return EXIT_AM_SKIP;
-#endif
-
     if (qemuTestDriverInit(&driver) < 0)
         return EXIT_FAILURE;
 
diff --git a/tests/qemucapabilitiestest.c b/tests/qemucapabilitiestest.c
index 28f903a..641ec4f 100644
--- a/tests/qemucapabilitiestest.c
+++ b/tests/qemucapabilitiestest.c
@@ -141,11 +141,6 @@ mymain(void)
     int ret = 0;
     testQemuData data;
 
-#if !WITH_STABLE_ORDERING_JANSSON
-    fputs("libvirt not compiled with recent enough Jansson, skipping this test\n", stderr);
-    return EXIT_AM_SKIP;
-#endif
-
 #if !WITH_JANSSON
     fputs("libvirt not compiled with JSON support, skipping this test\n", stderr);
     return EXIT_AM_SKIP;
diff --git a/tests/qemucommandutiltest.c b/tests/qemucommandutiltest.c
index 9b13dde..8e57a1b 100644
--- a/tests/qemucommandutiltest.c
+++ b/tests/qemucommandutiltest.c
@@ -76,11 +76,6 @@ mymain(void)
     int ret = 0;
     testQemuCommandBuildObjectFromJSONData data1;
 
-#if !WITH_STABLE_ORDERING_JANSSON
-    fputs("libvirt not compiled with recent enough Jansson, skipping this test\n", stderr);
-    return EXIT_AM_SKIP;
-#endif
-
 #if !WITH_JANSSON
     fputs("libvirt not compiled with JSON support, skipping this test\n", stderr);
     return EXIT_AM_SKIP;
diff --git a/tests/qemuhotplugtest.c b/tests/qemuhotplugtest.c
index 3c0eecb..2fb96c6 100644
--- a/tests/qemuhotplugtest.c
+++ b/tests/qemuhotplugtest.c
@@ -593,11 +593,6 @@ mymain(void)
     struct qemuHotplugTestData data = {0};
     struct testQemuHotplugCpuParams cpudata;
 
-#if !WITH_STABLE_ORDERING_JANSSON
-    fputs("libvirt not compiled with recent enough Jansson, skipping this test\n", stderr);
-    return EXIT_AM_SKIP;
-#endif
-
 #if !WITH_JANSSON
     fputs("libvirt not compiled with JSON support, skipping this test\n", stderr);
     return EXIT_AM_SKIP;
diff --git a/tests/qemumigparamstest.c b/tests/qemumigparamstest.c
index 5e12430..b8af682 100644
--- a/tests/qemumigparamstest.c
+++ b/tests/qemumigparamstest.c
@@ -203,11 +203,6 @@ mymain(void)
     virQEMUDriver driver;
     int ret = 0;
 
-#if !WITH_STABLE_ORDERING_JANSSON
-    fputs("libvirt not compiled with recent enough Jansson, skipping this test\n", stderr);
-    return EXIT_AM_SKIP;
-#endif
-
 #if !WITH_JANSSON
     fputs("libvirt not compiled with JSON support, skipping this test\n", stderr);
     return EXIT_AM_SKIP;
diff --git a/tests/qemumonitorjsontest.c b/tests/qemumonitorjsontest.c
index 1826c4f..c11615f 100644
--- a/tests/qemumonitorjsontest.c
+++ b/tests/qemumonitorjsontest.c
@@ -2863,11 +2863,6 @@ mymain(void)
     virJSONValuePtr metaschema = NULL;
     char *metaschemastr = NULL;
 
-#if !WITH_STABLE_ORDERING_JANSSON
-    fputs("libvirt not compiled with recent enough Jansson, skipping this test\n", stderr);
-    return EXIT_AM_SKIP;
-#endif
-
 #if !WITH_JANSSON
     fputs("libvirt not compiled with JSON support, skipping this test\n", stderr);
     return EXIT_AM_SKIP;
diff --git a/tests/virjsontest.c b/tests/virjsontest.c
index d352d37..d42413d 100644
--- a/tests/virjsontest.c
+++ b/tests/virjsontest.c
@@ -479,11 +479,6 @@ mymain(void)
 {
     int ret = 0;
 
-#if !WITH_STABLE_ORDERING_JANSSON
-    fputs("libvirt not compiled with recent enough Jansson, skipping this test\n", stderr);
-    return EXIT_AM_SKIP;
-#endif
-
 #define DO_TEST_FULL(name, cmd, doc, expect, pass) \
     do { \
         struct testInfo info = { doc, expect, pass }; \
diff --git a/tests/virmacmaptest.c b/tests/virmacmaptest.c
index 420531d..6e3e998 100644
--- a/tests/virmacmaptest.c
+++ b/tests/virmacmaptest.c
@@ -157,11 +157,6 @@ mymain(void)
     int ret = 0;
     virMacMapPtr mgr = NULL;
 
-#if !WITH_STABLE_ORDERING_JANSSON
-    fputs("libvirt not compiled with recent enough Jansson, skipping this test\n", stderr);
-    return EXIT_AM_SKIP;
-#endif
-
 #define DO_TEST_BASIC(f, d, ...) \
     do { \
         const char * const m[] = {__VA_ARGS__, NULL }; \
diff --git a/tests/virnetdaemontest.c b/tests/virnetdaemontest.c
index 277fb06..cbc961d 100644
--- a/tests/virnetdaemontest.c
+++ b/tests/virnetdaemontest.c
@@ -375,11 +375,6 @@ mymain(void)
     int ret = 0;
     const char *server_names[] = { "testServer0", "testServer1" };
 
-# if !WITH_STABLE_ORDERING_JANSSON
-    fputs("libvirt not compiled with recent enough Jansson, skipping this test\n", stderr);
-    return EXIT_AM_SKIP;
-# endif
-
     if (virInitialize() < 0 ||
         virEventRegisterDefaultImpl() < 0) {
         virDispatchError(NULL);
