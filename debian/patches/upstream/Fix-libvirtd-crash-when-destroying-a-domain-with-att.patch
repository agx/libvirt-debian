From: Peter Krempa <pkrempa@redhat.com>
Date: Sat, 8 Jun 2013 15:20:45 +0200
Subject: Fix libvirtd crash when destroying a domain with attached console

Origin: upstream
Bug: https://bugzilla.redhat.com/show_bug.cgi?id=969497
Applied-Upstream: ba226d334acbc49f6751b430e0c4e00f69eef6bf and 45edefc7a7bcbec988f54331ff37fc32e4bc2718
Last-Update: 2013-06-07

This is two upstream commits squashed:

commit ba226d334acbc49f6751b430e0c4e00f69eef6bf
Author: Peter Krempa <pkrempa@redhat.com>
Date:   Fri Jul 27 14:50:54 2012 +0200

    conf: Remove callback from stream when freeing entries in console hash

    When a domain has a active console connection and is destroyed the
    callback is called on private data that no longer exist causing a
    segfault.

commit 45edefc7a7bcbec988f54331ff37fc32e4bc2718
Author: Peter Krempa <pkrempa@redhat.com>
Date:   Fri Aug 3 11:20:29 2012 +0200

    conf: Remove console stream callback only when freeing console helper

    Commit ba226d334acbc49f6751b430e0c4e00f69eef6bf tried to fix crash of
    the daemon when a domain with an open console was destroyed. The fix was
    wrong as it tried to remove the callback also when the stream was
    aborted, where at that point the fd stream driver was already freed and
    removed.

    This patch clears the callbacks with a helper right before the hash is
    freed, so that it doesn't interfere with other codepaths where the
    stream object is freed.

---
 src/conf/virconsole.c |   13 +++++++++++++
 1 file changed, 13 insertions(+)

diff --git a/src/conf/virconsole.c b/src/conf/virconsole.c
index 443d80d..01f1c84 100644
--- a/src/conf/virconsole.c
+++ b/src/conf/virconsole.c
@@ -290,6 +290,18 @@ error:
 }
 
 /**
+ * Helper to clear stream callbacks when freeing the hash
+ */
+static void virConsoleFreeClearCallbacks(void *payload,
+                                         const void *name ATTRIBUTE_UNUSED,
+                                         void *data ATTRIBUTE_UNUSED)
+{
+    virStreamPtr st = payload;
+
+    virFDStreamSetInternalCloseCb(st, NULL, NULL, NULL);
+}
+
+/**
  * Free structures for handling open console streams.
  *
  * @cons Pointer to the private structure.
@@ -300,6 +312,7 @@ void virConsoleFree(virConsolesPtr cons)
         return;
 
     virMutexLock(&cons->lock);
+    virHashForEach(cons->hash, virConsoleFreeClearCallbacks, NULL);
     virHashFree(cons->hash);
     virMutexUnlock(&cons->lock);
     virMutexDestroy(&cons->lock);
