<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  </head>
  <body>

        <!-- DO NOT EDIT THIS FILE! It was generated automatically.
             Edit the source file (news.xml) instead -->

        <h1>Releases</h1><p>This is the list of official releases for libvirt, along with an
        overview of the changes introduced by each of them.</p><p>For a more fine-grained view, use the
        <a href="http://libvirt.org/git/?p=libvirt.git;a=log">git log</a>.
        </p><h3><strong>v3.0.0 (2017-01-17)</strong></h3><ul><li><strong>New features</strong><ul><li>
          Domain events for metadata content changes
        <br/>
          The domain events framework has a new event ID that can
          be used to get notifications when domain metadata content
          changes.
        </li><li>
          Event notifications for the secret object
        <br/>
          The secret object now supports event notifications, covering
          lifcycle changes and secret value changes.
        </li><li>
          New localPtr attribute for "ip" element in network XML
        </li><li>
          qemu: Support QEMU group I/O throttling
        <br/>
          Add the capability to allow group I/O throttling via a new
          domain &lt;disk&gt; &lt;iotune&gt; subelement "group_name"
          to allow sharing I/O throttling quota between multiple drives.
        </li><li>
          nss: Introduce <code>libvirt_guest</code>
        <br/>
          New <code>libvirt_guest</code> nss module that translates libvirt
          guest names into IP addresses.
        </li><li>
          daemon: Add support for runtime logging settings adjustment
        <br/>
          Logging-related settings like log outputs and filters can now be
          adjusted during runtime using the admin interface without the
          necessity of the daemon's restart.
        </li><li>
          storage: Add virStorageVolInfoFlags API
        <br/>
          Add the API to support using the VIR_STORAGE_VOL_GET_PHYSICAL
          flag in order to return the host physical size in bytes
          of the image container in the allocation field of the
          _virStorageVolInfo structure. The --physical flag has been
          added to the virsh vol-info command to access the data.
        </li><li>
          libxl: Implement virDomainGetMaxVcpus API
        </li><li>
          storage: Add overwrite flag checking for logical pool
        <br/>
          Add support for the OVERWRITE flags for the logical storage
          backend including checking for existing data on the target
          volumes when building a new logical pool on target volume(s).
        </li><li>
          qemu: Add support for guest CPU configuration on s390(x)
        </li></ul></li><li><strong>Improvements</strong><ul><li>
          perf: Add more perf statistics
        <br/>
          Add support to get the count of branch instructions
          executed, branch misses, bus cycles, stalled frontend
          cpu cycles, stalled backend cpu cycles, and ref cpu
          cycles by applications running on the platform.
        </li><li>
          conf: Display &lt;physical&gt; for volume xml
        <br/>
          Add a display of the &lt;physical&gt; size of a disk
          volume in the output of the volume XML.
        </li><li>
          qemu: Use virtio-pci by default for aarch64 mach-virt guests
        <br/>
          virtio-pci provides several advantages over virtio-mmio, such
          as the ability to hotplug devices and improved performance.
          While opting in to virtio-pci has been possible for a while,
          newly-defined guests will now use it automatically.
        </li><li>
          vbox: remove support for VirtualBox 3.x and older
        <br/>
          Those old VirtualBox versions have been unsupported by
          upstream for a long time and the API of 4.0 and newer has
          diverged enough to require code abstractions to handle differences.
          Removing support for those old versions drops lots of code from
          the driver and simplifies the logic to ease implementation of new
          features going forward.
        </li><li>
          virsh: pool-info: introduce option --bytes
        <br/>
          Add option --bytes to virsh pool-info in order ti allow display
          of units in bytes rather than default of human readable output.
        </li><li>
          scsi: Add parent wwnn/wwpn or fabric capability for createVport
        <br/>
          Improve the algorithm searching for the parent scsi_host device
          for vHBA/NPIV scsi_host creation. Rather than supplying the
          "parent" by name, it's now possible to define the parent by
          it's wwnn/wwpn or fabric_wwn in the node device create XML or
          the storage pool XML.
        </li><li>
          qemu: aggregate pcie-root-ports onto multiple functions of a slot
        <br/>
          When pcie-root-ports are added to pcie-root in order to
          provide a place to connect PCI Express endpoint devices,
          libvirt now aggregates multiple root ports together onto the
          same slot (up to 8 per slot) in order to conserve slots.
          Using this method, it's possible to connect more than 200
          endpoint devices to a guest that uses PCIe without requiring
          setup of any PCIe switches.
        </li></ul></li><li><strong>Bug fixes</strong><ul><li>
          lxc: fix accidental killing of containers during libvirtd restart
        <br/>
          The libvirt_lxc process was previously not moved into the
          container scope. As a result, if systemd reloads its config
          after a container is started, when libvirtd is later restarted
          it will accidentally kill the containers.
        </li><li>
          qemu: Correct GetBlockInfo values
        <br/>
          For an active domain, correct the physical value provided for
          a raw sparse file backed storage and the allocation value provided
          for a qcow2 file backed storage that hasn't yet been opened on
          the domain.
        </li><li>
          qemu: Make virtio console usable on ppc64 guests
        <br/>
          The chardev detection code has been improved and can now handle this
          configuration properly.
        </li><li>
          qemu: Enable mount namespace
        <br/>
          To avoid funny races with udev relabelling devices under our hands and
          to enhance security, libvirt now spawns each qemu process with its own
          <code>/dev</code>.
        </li><li>
          storage: Fix implementation of no-overwrite for file system backend
        <br/>
          Fix file system storage backend implementation of the OVERWRITE
          flags to be consistent between code and documentation. Add checks
          to ensure that when building a new file system on a target volume
          that there is not something already on the disk in a format that
          libvirt can recognize.
        </li><li>
          qemu: Create hugepage path on per domain basis
        <br/>
          Historically, all hugepage enabled domains shared the same path under
          hugetlbfs. This left libvirt unable to correctly set security labels
          on it. With this release, however, each domain is put into a
          separate path which is also correctly labeled.
        </li><li>
          conf: Reject domains with duplicate drive addresses
        <br/>
          Reject duplicate drive addresses for disks and hostdevs at
          domain definition.
        </li><li>
          libxl: reverse defaults on HVM net device attach
        <br/>
          Fixes network interface attach for HVM domains when no model is
          specified. Emulated hotplug isn't yet supported and hence we should
          default to the general working scenario.
        </li><li>
          libxl: always enable pae for x86_64 HVM
        <br/>
          By default pae is disabled in libxl. Without an explicit &lt;pae/&gt;
          setting in the domain &lt;features&gt; configuration, an x86_64 HVM
          domain would be get an i686 environment. pae should always be enabled
          for x86_64 HVM domains.
        </li></ul></li></ul><h3><strong>v2.5.0 (2016-12-04)</strong></h3><ul><li><strong>New features</strong><ul><li>
          shmem: Add support for additional models
        <br/>
          The shmem device can now utilize QEMU's ivshmem-plain and
          ivshmem-doorbell, more modern versions of ivshmem.
        </li><li>
          vbox: Add VirtualBox 5.1 support
        </li><li>
          libssh: New transport
        <br/>
          The new libssh transport allows one to connect to a running
          libvirtd via SSH, using the libssh library; for example:
          <tt>qemu+libssh://<i>server</i>/system</tt>.
        </li><li>
          vhost-scsi: Add support scsi_host hostdev passthrough
        <br/>
          Add the capability to pass through a scsi_host HBA and the
          associated LUNs to the guest.
        </li><li>
          qemu: Users can now enable debug logging for native gluster
          volumes in qemu using the "gluster_debug_level" option in qemu.conf
        </li><li>
          memory hotplug: Slot numbers for memory devices are now
          automatically allocated and thus persistent. In addition slot numbers
          can be specified without providing a base address, which simplifies
          user configuration
        </li><li>
          qemu: Express devices will be placed on PCIe bus by default
        <br/>
          For machine types that use a PCI Express root bus
          (e.g. x86_64/Q35 and aarch64/virt), any unaddressed PCI
          device that is an Express device (all virtio-1.0 devices,
          e1000e, nec-xhci, vfio assigned devices) will be placed on
          an Express controller (i.e. a pcie-root-port) instead of a
          legacy PCI controller (i.e. pci-bridge) with the root ports
          added as needed.
        </li></ul></li><li><strong>Improvements</strong><ul><li>
          docs: Better documentation for migration APIs and flags
        </li><li>
          vbox: Address thread safety issues
        </li><li>
          virsh: Add support for passing an alternative persistent XML
          to migrate command
        </li><li>
          vhostuser: Allow hotplug of multiqueue devices
        </li><li>
          NEWS: Switch to an improved format
        <br/>
          List user-visible changes instead of single commits for a better
          high-level overview of differences between libvirt releases.
        </li><li>
          website: Modernize layout and branding
        <br/>
          The libvirt website looked very cluttered and outdated; it has now
          been completely overhauled, resulting in a design that's better
          organized and more pleasant to look at.
        </li></ul></li><li><strong>Bug fixes</strong><ul><li>
          vz: Fix migration in P2P mode
        </li><li>
          Forbid newline character in names of some libvirt objects
        </li><li>
          Fix compilation on macOS
        </li></ul></li></ul><p>Older libvirt releases didn't have proper release notes,
        and as such are not included in this page: if you're looking
        for information about them, start from those made in
        <a href="news-2016.html">2016</a> and work your way back.</p></body>
</html>
