/* Automatically generated from ./logging/log_protocol.x by gendispatch.pl.
 * Do not edit this file.  Any changes you make will be lost.
 */
static int virLogManagerProtocolDispatchDomainAppendLogFile(
    virNetServerPtr server,
    virNetServerClientPtr client,
    virNetMessagePtr msg,
    virNetMessageErrorPtr rerr,
    virLogManagerProtocolDomainAppendLogFileArgs *args,
    virLogManagerProtocolDomainAppendLogFileRet *ret);
static int virLogManagerProtocolDispatchDomainAppendLogFileHelper(
    virNetServerPtr server,
    virNetServerClientPtr client,
    virNetMessagePtr msg,
    virNetMessageErrorPtr rerr,
    void *args,
    void *ret)
{
  int rv;
  virThreadJobSet("virLogManagerProtocolDispatchDomainAppendLogFile");
  VIR_DEBUG("server=%p client=%p msg=%p rerr=%p args=%p ret=%p",
            server, client, msg, rerr, args, ret);
  rv = virLogManagerProtocolDispatchDomainAppendLogFile(server, client, msg, rerr, args, ret);
  virThreadJobClear(rv);
  return rv;
}
/* virLogManagerProtocolDispatchDomainAppendLogFile body has to be implemented manually */



static int virLogManagerProtocolDispatchDomainGetLogFilePosition(
    virNetServerPtr server,
    virNetServerClientPtr client,
    virNetMessagePtr msg,
    virNetMessageErrorPtr rerr,
    virLogManagerProtocolDomainGetLogFilePositionArgs *args,
    virLogManagerProtocolDomainGetLogFilePositionRet *ret);
static int virLogManagerProtocolDispatchDomainGetLogFilePositionHelper(
    virNetServerPtr server,
    virNetServerClientPtr client,
    virNetMessagePtr msg,
    virNetMessageErrorPtr rerr,
    void *args,
    void *ret)
{
  int rv;
  virThreadJobSet("virLogManagerProtocolDispatchDomainGetLogFilePosition");
  VIR_DEBUG("server=%p client=%p msg=%p rerr=%p args=%p ret=%p",
            server, client, msg, rerr, args, ret);
  rv = virLogManagerProtocolDispatchDomainGetLogFilePosition(server, client, msg, rerr, args, ret);
  virThreadJobClear(rv);
  return rv;
}
/* virLogManagerProtocolDispatchDomainGetLogFilePosition body has to be implemented manually */



static int virLogManagerProtocolDispatchDomainOpenLogFile(
    virNetServerPtr server,
    virNetServerClientPtr client,
    virNetMessagePtr msg,
    virNetMessageErrorPtr rerr,
    virLogManagerProtocolDomainOpenLogFileArgs *args,
    virLogManagerProtocolDomainOpenLogFileRet *ret);
static int virLogManagerProtocolDispatchDomainOpenLogFileHelper(
    virNetServerPtr server,
    virNetServerClientPtr client,
    virNetMessagePtr msg,
    virNetMessageErrorPtr rerr,
    void *args,
    void *ret)
{
  int rv;
  virThreadJobSet("virLogManagerProtocolDispatchDomainOpenLogFile");
  VIR_DEBUG("server=%p client=%p msg=%p rerr=%p args=%p ret=%p",
            server, client, msg, rerr, args, ret);
  rv = virLogManagerProtocolDispatchDomainOpenLogFile(server, client, msg, rerr, args, ret);
  virThreadJobClear(rv);
  return rv;
}
/* virLogManagerProtocolDispatchDomainOpenLogFile body has to be implemented manually */



static int virLogManagerProtocolDispatchDomainReadLogFile(
    virNetServerPtr server,
    virNetServerClientPtr client,
    virNetMessagePtr msg,
    virNetMessageErrorPtr rerr,
    virLogManagerProtocolDomainReadLogFileArgs *args,
    virLogManagerProtocolDomainReadLogFileRet *ret);
static int virLogManagerProtocolDispatchDomainReadLogFileHelper(
    virNetServerPtr server,
    virNetServerClientPtr client,
    virNetMessagePtr msg,
    virNetMessageErrorPtr rerr,
    void *args,
    void *ret)
{
  int rv;
  virThreadJobSet("virLogManagerProtocolDispatchDomainReadLogFile");
  VIR_DEBUG("server=%p client=%p msg=%p rerr=%p args=%p ret=%p",
            server, client, msg, rerr, args, ret);
  rv = virLogManagerProtocolDispatchDomainReadLogFile(server, client, msg, rerr, args, ret);
  virThreadJobClear(rv);
  return rv;
}
/* virLogManagerProtocolDispatchDomainReadLogFile body has to be implemented manually */



virNetServerProgramProc virLogManagerProtocolProcs[] = {
{ /* Unused 0 */
   NULL,
   0,
   (xdrproc_t)xdr_void,
   0,
   (xdrproc_t)xdr_void,
   true,
   0
},
{ /* Method DomainOpenLogFile => 1 */
   virLogManagerProtocolDispatchDomainOpenLogFileHelper,
   sizeof(virLogManagerProtocolDomainOpenLogFileArgs),
   (xdrproc_t)xdr_virLogManagerProtocolDomainOpenLogFileArgs,
   sizeof(virLogManagerProtocolDomainOpenLogFileRet),
   (xdrproc_t)xdr_virLogManagerProtocolDomainOpenLogFileRet,
   true,
   0
},
{ /* Method DomainGetLogFilePosition => 2 */
   virLogManagerProtocolDispatchDomainGetLogFilePositionHelper,
   sizeof(virLogManagerProtocolDomainGetLogFilePositionArgs),
   (xdrproc_t)xdr_virLogManagerProtocolDomainGetLogFilePositionArgs,
   sizeof(virLogManagerProtocolDomainGetLogFilePositionRet),
   (xdrproc_t)xdr_virLogManagerProtocolDomainGetLogFilePositionRet,
   true,
   0
},
{ /* Method DomainReadLogFile => 3 */
   virLogManagerProtocolDispatchDomainReadLogFileHelper,
   sizeof(virLogManagerProtocolDomainReadLogFileArgs),
   (xdrproc_t)xdr_virLogManagerProtocolDomainReadLogFileArgs,
   sizeof(virLogManagerProtocolDomainReadLogFileRet),
   (xdrproc_t)xdr_virLogManagerProtocolDomainReadLogFileRet,
   true,
   0
},
{ /* Method DomainAppendLogFile => 4 */
   virLogManagerProtocolDispatchDomainAppendLogFileHelper,
   sizeof(virLogManagerProtocolDomainAppendLogFileArgs),
   (xdrproc_t)xdr_virLogManagerProtocolDomainAppendLogFileArgs,
   sizeof(virLogManagerProtocolDomainAppendLogFileRet),
   (xdrproc_t)xdr_virLogManagerProtocolDomainAppendLogFileRet,
   true,
   0
},
};
size_t virLogManagerProtocolNProcs = ARRAY_CARDINALITY(virLogManagerProtocolProcs);
