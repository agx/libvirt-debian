/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _LXC_MONITOR_PROTOCOL_H_RPCGEN
#define _LXC_MONITOR_PROTOCOL_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


enum virLXCProtocolExitStatus {
        VIR_LXC_PROTOCOL_EXIT_STATUS_ERROR = 0,
        VIR_LXC_PROTOCOL_EXIT_STATUS_SHUTDOWN = 1,
        VIR_LXC_PROTOCOL_EXIT_STATUS_REBOOT = 2,
};
typedef enum virLXCProtocolExitStatus virLXCProtocolExitStatus;

struct virLXCProtocolExitEventMsg {
        enum virLXCProtocolExitStatus status;
};
typedef struct virLXCProtocolExitEventMsg virLXCProtocolExitEventMsg;

struct virLXCProtocolInitEventMsg {
        uint64_t initpid;
};
typedef struct virLXCProtocolInitEventMsg virLXCProtocolInitEventMsg;
#define VIR_LXC_PROTOCOL_PROGRAM 0x12341234
#define VIR_LXC_PROTOCOL_PROGRAM_VERSION 1

enum virLXCProtocolProcedure {
        VIR_LXC_PROTOCOL_PROC_EXIT_EVENT = 1,
        VIR_LXC_PROTOCOL_PROC_INIT_EVENT = 2,
};
typedef enum virLXCProtocolProcedure virLXCProtocolProcedure;

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_virLXCProtocolExitStatus (XDR *, virLXCProtocolExitStatus*);
extern  bool_t xdr_virLXCProtocolExitEventMsg (XDR *, virLXCProtocolExitEventMsg*);
extern  bool_t xdr_virLXCProtocolInitEventMsg (XDR *, virLXCProtocolInitEventMsg*);
extern  bool_t xdr_virLXCProtocolProcedure (XDR *, virLXCProtocolProcedure*);

#else /* K&R C */
extern bool_t xdr_virLXCProtocolExitStatus ();
extern bool_t xdr_virLXCProtocolExitEventMsg ();
extern bool_t xdr_virLXCProtocolInitEventMsg ();
extern bool_t xdr_virLXCProtocolProcedure ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_LXC_MONITOR_PROTOCOL_H_RPCGEN */
